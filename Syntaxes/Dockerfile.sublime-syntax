%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Dockerfile
file_extensions:
  - Dockerfile
first_line_match: \s*(FROM|ARG)\s
scope: source.dockerfile

variables:
  onbuild_directive: (?:(ONBUILD)\s+)?
  build_directive: ({{onbuild_directive}}(ADD|ARG|ENV|EXPOSE|HEALTHCHECK|LABEL|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR))|(MAINTAINER)
  runtime_directive: ({{onbuild_directive}})(CMD|ENTRYPOINT)
  from_directive: (FROM)\s+[a-z0-9_.-]+([:@]([a-z0-9_.-]+))?(\s+(AS)\s+([a-z0-9_.-]+))?
  copy_directive: ({{onbuild_directive}}(COPY)(\s+--from=([a-z0-9_.-]+))?)

contexts:
  main:
    - include: comments
    - match: ^ARG\s
      scope: keyword.control.dockerfile
    - include: from

  from:
    - match: ^{{from_directive}}
      captures:
        1: keyword.control.dockerfile
        3: entity.name.enum.tag_digest
        5: keyword.control.dockerfile
        6: variable.stage_name
      push: body

  body:
    - include: comments
    - include: directives
    - include: invalid
    - include: from

  directives:
    - match: ^\s*{{build_directive}}\s
      captures:
        0: keyword.control.dockerfile
        2: keyword.other.special-method.dockerfile
      push: args
    - match: ^\s*{{copy_directive}}\s
      captures:
        3: keyword.control.dockerfile
        5: variable.stage_name
      push: args
    - match: ^\s*{{runtime_directive}}\s
      captures:
        0: keyword.operator.dockerfile
        2: keyword.other.special-method.dockerfile
      push: args

  escaped-char:
    - match: \\.
      scope: constant.character.escaped.dockerfile

  args:
    - include: comments
    - include: escaped-char
    - match: ^\s*$
    - match: \\\s+$
    - match: \n
      pop: true
    - match: '"'
      scope: punctuation.definition.string.begin.dockerfile
      push: double_quote_string
    - match: "'"
      scope: punctuation.definition.string.begin.dockerfile
      push: single_quote_string

  double_quote_string:
    - meta_scope: string.quoted.double.dockerfile
    - include: escaped-char
    - match: ^\s*$
    - match: \\\s+$
    - match: \n
      set: invalid
    - match: '"'
      scope: punctuation.definition.string.end.dockerfile
      pop: true

  single_quote_string:
    - meta_scope: string.quoted.single.dockerfile
    - include: escaped-char
    - match: ^\s*$
    - match: \\\s+$
    - match: \n
      set: invalid
    - match: "'"
      scope: punctuation.definition.string.end.dockerfile
      pop: true

  comments:
    - match: ^(\s*)((#).*$\n?)
      comment: comment.line
      captures:
        1: punctuation.whitespace.comment.leading.dockerfile
        2: comment.dockerfile
        3: punctuation.definition.comment.dockerfile

  invalid:
    - match: ^[^A-Z\n](.*)$
      scope: invalid
      set: body
